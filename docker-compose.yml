version: "3.7"
services:
  zookeeper:
    image: quay.io/debezium/zookeeper:${DEBEZIUM_VERSION}
    platform: linux/amd64
    ports:
      - "2181:2181"
      - "2888:2888"
      - "3888:3888"
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
  kafka:
    image: quay.io/debezium/kafka:${DEBEZIUM_VERSION}
    platform: linux/amd64
    ports:
      - "9092:9092"
    links:
      - zookeeper
    environment:
      - ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
  mysql:
    image: quay.io/debezium/example-mysql:${DEBEZIUM_VERSION}
    platform: linux/amd64
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    volumes:
      - "./data/mysql:/var/lib/mysql"
  postgres:
    image: quay.io/debezium/postgres:${POSTGRES_VERSION}
    platform: linux/amd64
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - "./data/postgres:/var/lib/postgresql"
  elastic:
    image: docker.elastic.co/elasticsearch/elasticsearch:5.5.2
    platform: linux/amd64
    ports:
      - "9200:9200"
    environment:
      - http.host=0.0.0.0
      - transport.host=127.0.0.1
      - xpack.security.enabled=false
      - bootstrap.system_call_filter=false
    volumes:
      - "./data/elasticsearch:/usr/share/elasticsearch/data"
  connect:
    image: debezium/connect-jdbc-es:${DEBEZIUM_VERSION}
    platform: linux/amd64
    build:
      context: debezium-jdbc-es
      args:
        DEBEZIUM_VERSION: ${DEBEZIUM_VERSION}
    ports:
      - "8083:8083"
      - "5005:5005"
    links:
      - kafka
      - mysql
      - postgres
      - elastic
    depends_on:
      - kafka
    environment:
      - BOOTSTRAP_SERVERS=kafka:9092
      - GROUP_ID=1
      - CONFIG_STORAGE_TOPIC=my_connect_configs
      - OFFSET_STORAGE_TOPIC=my_connect_offsets
      - STATUS_STORAGE_TOPIC=my_source_connect_statuses
  kafka_ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8090:8080"
    environment:
        KAFKA_CLUSTERS_0_NAME: local
        KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS: kafka:9092
        KAFKA_CLUSTERS_0_ZOOKEEPER_CONNECT: zookeeper:2181
        KAFKA_CLUSTERS_0_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
        KAFKA_CLUSTERS_0_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT:PLAINTEXT

    links:
      - kafka
#  mongo:
#    image: mongo:4.4
#    platform: linux/amd64
#    ports:
#      - "27017:27017"
#    environment:
#      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
#      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
#      - MONGO_INITDB_DATABASE=${MONGO_DB}
#      - MONGO_INITDB_USERNAME=${MONGO_USER}
#      - MONGO_INITDB_PASSWORD=${MONGO_PASSWORD}
#    volumes:
#      - "./data/mongo:/data/db"
